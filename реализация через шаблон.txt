#include <iostream>
#include <clocale>
#include <cstring>
using namespace std;


template <typename Type>

class Stack
{
  private:
      Type data;
      Stack* head;
      Stack* prev;

  public:
      Stack()
        {
            head  = NULL;
        }

  void push(Type d)
    {
      Stack *newdata = new Stack;
      newdata ->  data = d;
      newdata -> prev = head;
      head = newdata;
    }
   void pop()
   {
      {
    if (head==NULL)
        {
            cout<<"Stack is empty!Please call the function 'push' to put a new element into the dynamic stack"<<endl;
        }
        else
          {
              Stack* temp = new Stack;
              temp = head;
              delete head;
              head = temp -> prev;

          }
      }
   }

  void show_stack()
{
    if (head ==NULL)
    {
       cout<<"Stack is empty!!!!"<<endl;
    }
        else
          {
              Stack* temp  = new Stack;
              temp = head;
              while (temp!=NULL)
              {
                  cout<< temp -> data<<endl;
                  temp = temp -> prev;
              }
          }
}

};

int main()
{
    Stack <int> s1;
    s1.push(1);
    s1.push(2);
    s1.show_stack();
    Stack<int> s2=s1;
    s2.show_stack();
}


